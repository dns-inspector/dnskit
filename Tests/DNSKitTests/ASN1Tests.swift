// DNSKit
// Copyright (C) 2024 Ian Spence
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

import XCTest
@testable import DNSKit

final class ASN1Tests: XCTestCase {
    func testPKCS1ForRSAKey() {
        let modulus = Data([ 0xAC, 0xFF, 0xB4, 0x09, 0xBC, 0xC9, 0x39, 0xF8, 0x31, 0xF7, 0xA1, 0xE5, 0xEC, 0x88, 0xF7, 0xA5, 0x92, 0x55, 0xEC, 0x53, 0x04, 0x0B, 0xE4, 0x32, 0x02, 0x73, 0x90, 0xA4, 0xCE, 0x89, 0x6D, 0x6F, 0x90, 0x86, 0xF3, 0xC5, 0xE1, 0x77, 0xFB, 0xFE, 0x11, 0x81, 0x63, 0xAA, 0xEC, 0x7A, 0xF1, 0x46, 0x2C, 0x47, 0x94, 0x59, 0x44, 0xC4, 0xE2, 0xC0, 0x26, 0xBE, 0x5E, 0x98, 0xBB, 0xCD, 0xED, 0x25, 0x97, 0x82, 0x72, 0xE1, 0xE3, 0xE0, 0x79, 0xC5, 0x09, 0x4D, 0x57, 0x3F, 0x0E, 0x83, 0xC9, 0x2F, 0x02, 0xB3, 0x2D, 0x35, 0x13, 0xB1, 0x55, 0x0B, 0x82, 0x69, 0x29, 0xC8, 0x0D, 0xD0, 0xF9, 0x2C, 0xAC, 0x96, 0x6D, 0x17, 0x76, 0x9F, 0xD5, 0x86, 0x7B, 0x64, 0x7C, 0x3F, 0x38, 0x02, 0x9A, 0xBD, 0xC4, 0x81, 0x52, 0xEB, 0x8F, 0x20, 0x71, 0x59, 0xEC, 0xC5, 0xD2, 0x32, 0xC7, 0xC1, 0x53, 0x7C, 0x79, 0xF4, 0xB7, 0xAC, 0x28, 0xFF, 0x11, 0x68, 0x2F, 0x21, 0x68, 0x1B, 0xF6, 0xD6, 0xAB, 0xA5, 0x55, 0x03, 0x2B, 0xF6, 0xF9, 0xF0, 0x36, 0xBE, 0xB2, 0xAA, 0xA5, 0xB3, 0x77, 0x8D, 0x6E, 0xEB, 0xFB, 0xA6, 0xBF, 0x9E, 0xA1, 0x91, 0xBE, 0x4A, 0xB0, 0xCA, 0xEA, 0x75, 0x9E, 0x2F, 0x77, 0x3A, 0x1F, 0x90, 0x29, 0xC7, 0x3E, 0xCB, 0x8D, 0x57, 0x35, 0xB9, 0x32, 0x1D, 0xB0, 0x85, 0xF1, 0xB8, 0xE2, 0xD8, 0x03, 0x8F, 0xE2, 0x94, 0x19, 0x92, 0x54, 0x8C, 0xEE, 0x0D, 0x67, 0xDD, 0x45, 0x47, 0xE1, 0x1D, 0xD6, 0x3A, 0xF9, 0xC9, 0xFC, 0x1C, 0x54, 0x66, 0xFB, 0x68, 0x4C, 0xF0, 0x09, 0xD7, 0x19, 0x7C, 0x2C, 0xF7, 0x9E, 0x79, 0x2A, 0xB5, 0x01, 0xE6, 0xA8, 0xA1, 0xCA, 0x51, 0x9A, 0xF2, 0xCB, 0x9B, 0x5F, 0x63, 0x67, 0xE9, 0x4C, 0x0D, 0x47, 0x50, 0x24, 0x51, 0x35, 0x7B, 0xE1, 0xB5 ])
        let exponent: UInt32 = 65537

        let pkcs1 = ASN1.pkcs1RSAPubkey(exponent: exponent, exponentLength: 3, modulus: modulus)
        XCTAssertEqual(pkcs1.hexEncodedString().lowercased(), "3082010a0282010100acffb409bcc939f831f7a1e5ec88f7a59255ec53040be432027390a4ce896d6f9086f3c5e177fbfe118163aaec7af1462c47945944c4e2c026be5e98bbcded25978272e1e3e079c5094d573f0e83c92f02b32d3513b1550b826929c80dd0f92cac966d17769fd5867b647c3f38029abdc48152eb8f207159ecc5d232c7c1537c79f4b7ac28ff11682f21681bf6d6aba555032bf6f9f036beb2aaa5b3778d6eebfba6bf9ea191be4ab0caea759e2f773a1f9029c73ecb8d5735b9321db085f1b8e2d8038fe2941992548cee0d67dd4547e11dd63af9c9fc1c5466fb684cf009d7197c2cf79e792ab501e6a8a1ca519af2cb9b5f6367e94c0d47502451357be1b50203010001")
    }

    func testPKCS1ForECSignature() {
        let signature = Data([ 0x00, 0xF0, 0x6B, 0x22, 0x3B, 0x16, 0xD0, 0x58, 0xC6, 0xAE, 0xA3, 0x6E, 0x9A, 0xC0, 0x4F, 0x2A, 0x06, 0x9B, 0x1A, 0x11, 0x01, 0x34, 0x9E, 0x04, 0x51, 0x59, 0xA3, 0x9F, 0x07, 0x04, 0x94, 0x8B, 0x90, 0x5D, 0x9F, 0x1B, 0x41, 0x50, 0x7B, 0x5E, 0x60, 0x08, 0xB1, 0x48, 0x99, 0xDB, 0x70, 0xCE, 0x1D, 0x8E, 0x11, 0xF6, 0x18, 0x34, 0xC0, 0x8E, 0x7D, 0x2D, 0x2A, 0xED, 0xEA, 0xCB, 0x42, 0xC7 ])

        let pkcs1 = ASN1.pkcs1Signature(signature, algorithm: .ECDSAP256_SHA256)
        XCTAssertEqual(pkcs1.hexEncodedString().lowercased(), "3045022000f06b223b16d058c6aea36e9ac04f2a069b1a1101349e045159a39f0704948b022100905d9f1b41507b5e6008b14899db70ce1d8e11f61834c08e7d2d2aedeacb42c7")
    }
}
