// DNSKit
// Copyright (C) Ian Spence and other DNSKit Contributors
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

import Foundation
import Testing
@testable import DNSKit

@Suite("DNSSEC") struct DNSSECClientTests {
    func validateWithMessage(_ message: Message) throws {
        guard let rrsigAnswer = message.answers.first(where: { answer in answer.recordType == .RRSIG }) else {
            fatalError("No RRSIG answer")
        }
        let rrsig = rrsigAnswer.data as! RRSIGRecordData

        var dnskeyAnswer: Answer!
        var answers: [Answer] = []
        for answer in message.answers {
            if answer.recordType != .DNSKEY {
                continue
            }

            answers.append(answer)

            let dnskey = answer.data as! DNSKEYRecordData
            if dnskey.keyTag != rrsig.keyTag {
                continue
            }
            dnskeyAnswer = answer
        }

        try DNSSECSignatureVerifier.verifyAnswers(answers, signatureAnswer: rrsigAnswer, dnskeyAnswer: dnskeyAnswer)
    }

    @Test func testValidateAnswerECDSA() async throws {
        let data = Data([ 0x7d, 0x40, 0x81, 0x80, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x30, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x44, 0x01, 0x00, 0x03, 0x0d, 0x13, 0xbb, 0x6d, 0xf1, 0x12, 0x39, 0x14, 0x68, 0x39, 0x86, 0x98, 0x4a, 0x11, 0x65, 0xa1, 0xdc, 0x18, 0x58, 0x1b, 0x66, 0x1e, 0x83, 0x4a, 0x4e, 0xa8, 0x96, 0xd6, 0xd7, 0xe6, 0xba, 0x59, 0x84, 0xcf, 0x7b, 0xca, 0xe1, 0x12, 0x49, 0x14, 0xa0, 0x42, 0xa1, 0xdc, 0x45, 0xb5, 0xe7, 0x73, 0x2b, 0xf4, 0xb5, 0xc8, 0x66, 0xec, 0xf9, 0x8d, 0x9f, 0xb0, 0x40, 0xa7, 0xea, 0xfb, 0x89, 0x8d, 0x88, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x44, 0x01, 0x01, 0x03, 0x0d, 0x91, 0x72, 0xa4, 0xbd, 0x65, 0x37, 0xbc, 0x66, 0x1f, 0x4c, 0x91, 0xa5, 0xde, 0xa0, 0x5d, 0xe2, 0xa8, 0x62, 0x5a, 0x9e, 0x5a, 0x46, 0xce, 0xd8, 0xb6, 0x40, 0x89, 0xc4, 0x3d, 0x9d, 0xfa, 0xde, 0xca, 0x5e, 0xac, 0x1a, 0x87, 0x0c, 0x39, 0x22, 0x02, 0x6d, 0xc4, 0x94, 0xf6, 0xc8, 0x52, 0x2d, 0x96, 0x08, 0x1a, 0xcf, 0x27, 0xd7, 0xa8, 0x91, 0x15, 0x3a, 0x63, 0x09, 0xde, 0xa4, 0xf4, 0xb5, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x5f, 0x00, 0x30, 0x0d, 0x02, 0x00, 0x00, 0x0e, 0x10, 0x66, 0x27, 0x9d, 0x90, 0x66, 0x0c, 0x84, 0x7b, 0x01, 0x72, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x85, 0x51, 0xb4, 0x47, 0x59, 0x6e, 0x97, 0x0b, 0x16, 0x5f, 0xe0, 0xe5, 0xea, 0xb2, 0x90, 0xd7, 0xa4, 0x88, 0x5b, 0x12, 0x24, 0x5f, 0x4a, 0xda, 0x69, 0x42, 0x61, 0xa8, 0x2c, 0xea, 0x73, 0x04, 0x8a, 0x11, 0x65, 0xd8, 0xe4, 0x3d, 0x3e, 0xbb, 0xd2, 0x11, 0x63, 0x7f, 0xc2, 0x90, 0x29, 0x13, 0x36, 0x85, 0x0d, 0xc1, 0xa8, 0x71, 0xd6, 0xea, 0x5f, 0x71, 0xd6, 0x30, 0x76, 0x33, 0xfd, 0x1c, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ])
        let message = try Message(messageData: data)
        try validateWithMessage(message)
    }

    @Test func testValidateAnswerRSA() async throws {
        let data = Data([ 0x6b, 0x5d, 0x81, 0x80, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x01, 0x51, 0x80, 0x01, 0x08, 0x01, 0x01, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0xac, 0xff, 0xb4, 0x09, 0xbc, 0xc9, 0x39, 0xf8, 0x31, 0xf7, 0xa1, 0xe5, 0xec, 0x88, 0xf7, 0xa5, 0x92, 0x55, 0xec, 0x53, 0x04, 0x0b, 0xe4, 0x32, 0x02, 0x73, 0x90, 0xa4, 0xce, 0x89, 0x6d, 0x6f, 0x90, 0x86, 0xf3, 0xc5, 0xe1, 0x77, 0xfb, 0xfe, 0x11, 0x81, 0x63, 0xaa, 0xec, 0x7a, 0xf1, 0x46, 0x2c, 0x47, 0x94, 0x59, 0x44, 0xc4, 0xe2, 0xc0, 0x26, 0xbe, 0x5e, 0x98, 0xbb, 0xcd, 0xed, 0x25, 0x97, 0x82, 0x72, 0xe1, 0xe3, 0xe0, 0x79, 0xc5, 0x09, 0x4d, 0x57, 0x3f, 0x0e, 0x83, 0xc9, 0x2f, 0x02, 0xb3, 0x2d, 0x35, 0x13, 0xb1, 0x55, 0x0b, 0x82, 0x69, 0x29, 0xc8, 0x0d, 0xd0, 0xf9, 0x2c, 0xac, 0x96, 0x6d, 0x17, 0x76, 0x9f, 0xd5, 0x86, 0x7b, 0x64, 0x7c, 0x3f, 0x38, 0x02, 0x9a, 0xbd, 0xc4, 0x81, 0x52, 0xeb, 0x8f, 0x20, 0x71, 0x59, 0xec, 0xc5, 0xd2, 0x32, 0xc7, 0xc1, 0x53, 0x7c, 0x79, 0xf4, 0xb7, 0xac, 0x28, 0xff, 0x11, 0x68, 0x2f, 0x21, 0x68, 0x1b, 0xf6, 0xd6, 0xab, 0xa5, 0x55, 0x03, 0x2b, 0xf6, 0xf9, 0xf0, 0x36, 0xbe, 0xb2, 0xaa, 0xa5, 0xb3, 0x77, 0x8d, 0x6e, 0xeb, 0xfb, 0xa6, 0xbf, 0x9e, 0xa1, 0x91, 0xbe, 0x4a, 0xb0, 0xca, 0xea, 0x75, 0x9e, 0x2f, 0x77, 0x3a, 0x1f, 0x90, 0x29, 0xc7, 0x3e, 0xcb, 0x8d, 0x57, 0x35, 0xb9, 0x32, 0x1d, 0xb0, 0x85, 0xf1, 0xb8, 0xe2, 0xd8, 0x03, 0x8f, 0xe2, 0x94, 0x19, 0x92, 0x54, 0x8c, 0xee, 0x0d, 0x67, 0xdd, 0x45, 0x47, 0xe1, 0x1d, 0xd6, 0x3a, 0xf9, 0xc9, 0xfc, 0x1c, 0x54, 0x66, 0xfb, 0x68, 0x4c, 0xf0, 0x09, 0xd7, 0x19, 0x7c, 0x2c, 0xf7, 0x9e, 0x79, 0x2a, 0xb5, 0x01, 0xe6, 0xa8, 0xa1, 0xca, 0x51, 0x9a, 0xf2, 0xcb, 0x9b, 0x5f, 0x63, 0x67, 0xe9, 0x4c, 0x0d, 0x47, 0x50, 0x24, 0x51, 0x35, 0x7b, 0xe1, 0xb5, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x01, 0x51, 0x80, 0x01, 0x08, 0x01, 0x00, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0x90, 0x40, 0x2e, 0x83, 0x85, 0x22, 0x6c, 0x1c, 0x24, 0x98, 0x3d, 0x22, 0xee, 0xd5, 0xcb, 0xb6, 0x72, 0x2e, 0x38, 0x6d, 0x5d, 0xfb, 0xce, 0xd5, 0xcf, 0x64, 0xe2, 0xf1, 0xe3, 0x3a, 0x97, 0xfd, 0x8b, 0xb5, 0x35, 0x90, 0xab, 0x6b, 0x06, 0xf8, 0x67, 0xc2, 0xc3, 0xa7, 0x8b, 0x5b, 0x1b, 0xe7, 0x48, 0x24, 0x51, 0xac, 0x91, 0xb4, 0xc0, 0xd3, 0x51, 0x0a, 0xaf, 0x96, 0x33, 0x0c, 0x7f, 0x86, 0xe9, 0x93, 0x21, 0x2d, 0x70, 0x4e, 0x5e, 0xbc, 0x2c, 0xe1, 0x1d, 0xb1, 0x4b, 0xab, 0x57, 0x28, 0x2f, 0x94, 0x0e, 0x8b, 0x1d, 0xe6, 0x7c, 0x99, 0xbe, 0xf8, 0x5b, 0xc8, 0x31, 0xa0, 0x2d, 0xe7, 0x69, 0xce, 0xbc, 0x07, 0x6a, 0x47, 0xf9, 0x6e, 0xb8, 0x8d, 0x75, 0x6c, 0x0d, 0x40, 0x99, 0x20, 0x88, 0x24, 0xa0, 0x14, 0xc7, 0x5e, 0x3b, 0x0d, 0xc7, 0xce, 0x1d, 0x82, 0xa0, 0xdd, 0xab, 0x3e, 0x77, 0x39, 0xe7, 0xdc, 0x86, 0xa1, 0xe1, 0xc5, 0x81, 0x31, 0x5c, 0xc3, 0x7b, 0xb3, 0xcf, 0xb0, 0x54, 0xb5, 0x00, 0xee, 0xa0, 0x53, 0xc1, 0x29, 0x9a, 0x24, 0x49, 0xf5, 0x53, 0x0d, 0x03, 0x4f, 0x5f, 0x3b, 0x20, 0xee, 0xab, 0xdf, 0x9d, 0xea, 0xcc, 0x3c, 0x51, 0x49, 0xc9, 0x44, 0xc0, 0x05, 0x02, 0xe3, 0xcb, 0x85, 0x41, 0x63, 0x50, 0x03, 0xae, 0x58, 0xec, 0x3b, 0xe0, 0x10, 0xbd, 0x94, 0xeb, 0x4c, 0x42, 0x96, 0xcb, 0x33, 0x3f, 0x29, 0x5f, 0x40, 0x83, 0x29, 0xd3, 0x97, 0x0c, 0x78, 0xf2, 0x8f, 0xad, 0x67, 0xc5, 0x24, 0x96, 0xc4, 0xf7, 0x54, 0x8d, 0xea, 0x31, 0x23, 0x5e, 0xe5, 0x41, 0x3a, 0x52, 0x3d, 0x1b, 0x6a, 0x44, 0x71, 0x67, 0xe4, 0x58, 0x23, 0xd9, 0xef, 0xbd, 0x05, 0x5c, 0x21, 0x85, 0x61, 0x83, 0x40, 0xdf, 0x24, 0x51, 0x54, 0x89, 0x1d, 0x9b, 0x50, 0x88, 0x8d, 0x00, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x01, 0x51, 0x80, 0x01, 0x13, 0x00, 0x30, 0x08, 0x00, 0x00, 0x02, 0xa3, 0x00, 0x66, 0x32, 0xd7, 0x80, 0x66, 0x17, 0x28, 0x00, 0x4f, 0x66, 0x00, 0x8e, 0x07, 0x57, 0x79, 0x73, 0xa8, 0xa1, 0xa4, 0x2a, 0xf0, 0x21, 0x7b, 0xc0, 0xe7, 0x71, 0x0d, 0x04, 0x70, 0xe7, 0xbc, 0x3a, 0x3d, 0x1e, 0x88, 0xfa, 0x81, 0x44, 0xa5, 0x09, 0x05, 0xba, 0x45, 0x07, 0x4c, 0xba, 0x19, 0x44, 0xa4, 0x33, 0xc3, 0xcd, 0x72, 0x2d, 0xbc, 0x2d, 0x64, 0x73, 0x89, 0xd2, 0x17, 0x0a, 0x38, 0x6e, 0x34, 0xf4, 0x45, 0xa5, 0x24, 0xb3, 0x20, 0xd1, 0x72, 0x6d, 0x00, 0x46, 0xae, 0x82, 0xd3, 0x1d, 0xa5, 0xc0, 0xf7, 0x97, 0x1b, 0x23, 0xb8, 0x31, 0x37, 0x20, 0x4b, 0xa3, 0x36, 0x07, 0x76, 0xb8, 0xf4, 0xa3, 0x81, 0xaa, 0x6e, 0x3d, 0x85, 0xb0, 0x0d, 0xb3, 0x0e, 0x2f, 0xd2, 0xe1, 0x9b, 0x10, 0x16, 0x58, 0x8b, 0xed, 0x2a, 0xf4, 0x74, 0x48, 0x21, 0x97, 0x59, 0x78, 0x4a, 0xfb, 0x95, 0x0e, 0x39, 0x73, 0xa8, 0x69, 0x52, 0x66, 0x15, 0xc6, 0x04, 0x93, 0x88, 0xc1, 0xbd, 0xe0, 0x48, 0x8d, 0x1d, 0x99, 0xdb, 0x74, 0x8c, 0x93, 0x8e, 0x03, 0xc0, 0xd5, 0xe8, 0x4d, 0xb8, 0x6f, 0x51, 0x4b, 0x12, 0x44, 0xbd, 0x4e, 0x12, 0xbf, 0xb4, 0x38, 0xe1, 0xb8, 0xa1, 0xfc, 0x9d, 0x13, 0xb2, 0xfa, 0x12, 0xa3, 0x8c, 0x90, 0x0a, 0x73, 0x40, 0x30, 0x90, 0x26, 0xc4, 0xe5, 0x49, 0x25, 0x82, 0x1e, 0x76, 0x2c, 0x05, 0x83, 0x28, 0x15, 0xd2, 0x8c, 0x54, 0x4c, 0xa3, 0x7b, 0x30, 0x39, 0xcc, 0x46, 0x88, 0x51, 0x64, 0x6c, 0xc6, 0x17, 0x1b, 0xbf, 0x15, 0xbb, 0x26, 0x5b, 0x4d, 0x3b, 0xc0, 0x3a, 0x96, 0xfb, 0x2d, 0xa7, 0x9c, 0xc4, 0x96, 0x36, 0x1c, 0xa8, 0x8a, 0x34, 0x75, 0x41, 0x54, 0xe5, 0x32, 0xc6, 0xe7, 0x94, 0x5d, 0x1c, 0xdb, 0x66, 0xd0, 0x12, 0x6e, 0x5a, 0x30, 0xa6, 0xc0, 0xac, 0xbf, 0x9e, 0x15, 0xf0, 0xfc, 0x7d, 0x90, 0x84, 0xa8, 0x9b, 0x02, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ])
        let message = try Message(messageData: data)
        try validateWithMessage(message)
    }

    @Test func testValidateFull() async throws {
        let message = try Message(messageData: Data([ 0x8c, 0x35, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x04, 0x5d, 0xb8, 0xd7, 0x0e, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x5f, 0x00, 0x01, 0x0d, 0x02, 0x00, 0x00, 0x0e, 0x10, 0x66, 0xaf, 0x7c, 0xcb, 0x66, 0x93, 0x76, 0xdd, 0x37, 0xd5, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x75, 0xde, 0xdc, 0x5b, 0x96, 0xb3, 0xac, 0xf2, 0xb9, 0xc6, 0x16, 0xea, 0xb4, 0xa5, 0x72, 0x1a, 0x57, 0xc0, 0x95, 0x10, 0x57, 0xe5, 0x73, 0x4d, 0x89, 0xe0, 0xa9, 0xf7, 0x9c, 0x16, 0xb1, 0x83, 0x3b, 0x99, 0x8f, 0xf0, 0x80, 0x0f, 0xd0, 0x33, 0x8d, 0x09, 0xd8, 0x61, 0xe2, 0x1c, 0xdd, 0x31, 0xd8, 0x7d, 0x0c, 0x12, 0x6a, 0xcb, 0xfe, 0x77, 0x28, 0x6d, 0x4e, 0x97, 0x26, 0x53, 0x02, 0xee, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ]))

        var resources: [String: (Message, Message?)] = [
            "example.com.": (try Message(messageData: Data([ 0xb9, 0x9b, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x30, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x44, 0x01, 0x00, 0x03, 0x0d, 0x5d, 0x17, 0x34, 0x84, 0x9e, 0x70, 0x11, 0x78, 0xf9, 0xaa, 0xef, 0x84, 0x69, 0xd0, 0xf0, 0xf4, 0x16, 0x62, 0x83, 0x20, 0x46, 0x8b, 0xf4, 0x35, 0xdc, 0x66, 0x84, 0xcd, 0xf2, 0xeb, 0x09, 0x5a, 0x51, 0xac, 0xa9, 0xe0, 0xbd, 0xc9, 0x07, 0x7a, 0xaf, 0x1c, 0xe6, 0x91, 0xfb, 0xc6, 0xc8, 0x9e, 0x0e, 0xcb, 0x07, 0xab, 0x4a, 0xe8, 0x1f, 0x67, 0x2a, 0x74, 0x11, 0x9c, 0x1b, 0x71, 0x89, 0x64, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x44, 0x01, 0x00, 0x03, 0x0d, 0xc1, 0x11, 0x5c, 0x20, 0x31, 0x8f, 0xe0, 0x54, 0xc6, 0xc6, 0x93, 0x4e, 0x4d, 0x41, 0x72, 0xe6, 0x7d, 0x56, 0x00, 0xda, 0x2e, 0x37, 0x40, 0xf7, 0x8b, 0xfa, 0x0d, 0xa6, 0x1d, 0x54, 0x5f, 0xdd, 0xca, 0x4a, 0xae, 0x30, 0x13, 0x34, 0xf9, 0x58, 0x95, 0xc3, 0x5e, 0x9b, 0x81, 0x09, 0x49, 0x62, 0xca, 0x53, 0x82, 0xc6, 0x36, 0x2e, 0xc1, 0x05, 0xbe, 0xde, 0xc5, 0x3a, 0x0b, 0x2f, 0xcb, 0x34, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x44, 0x01, 0x01, 0x03, 0x0d, 0x91, 0x72, 0xa4, 0xbd, 0x65, 0x37, 0xbc, 0x66, 0x1f, 0x4c, 0x91, 0xa5, 0xde, 0xa0, 0x5d, 0xe2, 0xa8, 0x62, 0x5a, 0x9e, 0x5a, 0x46, 0xce, 0xd8, 0xb6, 0x40, 0x89, 0xc4, 0x3d, 0x9d, 0xfa, 0xde, 0xca, 0x5e, 0xac, 0x1a, 0x87, 0x0c, 0x39, 0x22, 0x02, 0x6d, 0xc4, 0x94, 0xf6, 0xc8, 0x52, 0x2d, 0x96, 0x08, 0x1a, 0xcf, 0x27, 0xd7, 0xa8, 0x91, 0x15, 0x3a, 0x63, 0x09, 0xde, 0xa4, 0xf4, 0xb5, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x5f, 0x00, 0x30, 0x0d, 0x02, 0x00, 0x00, 0x0e, 0x10, 0x66, 0xaf, 0x98, 0x23, 0x66, 0x93, 0x76, 0xdd, 0x01, 0x72, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0xb3, 0xe3, 0x4e, 0xd2, 0x5e, 0xd5, 0x1a, 0x42, 0xeb, 0x03, 0x19, 0x82, 0xe8, 0xd1, 0x0b, 0x86, 0x68, 0xba, 0x92, 0x1f, 0x96, 0x0a, 0xbd, 0x6a, 0x7e, 0x2c, 0x6d, 0xa7, 0xc1, 0x8c, 0x5a, 0xbb, 0x16, 0x85, 0x85, 0x8f, 0xda, 0x8d, 0x3d, 0x43, 0x68, 0x9e, 0x93, 0x1a, 0x66, 0xfd, 0x66, 0x83, 0xc2, 0xbc, 0xd1, 0xf5, 0x95, 0x73, 0x85, 0xc1, 0xde, 0xea, 0x4b, 0x4a, 0x3a, 0x09, 0xb9, 0x24, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ])), try Message(messageData: Data([ 0x7e, 0x70, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x2b, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x01, 0x51, 0x80, 0x00, 0x24, 0x01, 0x72, 0x0d, 0x02, 0xbe, 0x74, 0x35, 0x99, 0x54, 0x66, 0x00, 0x69, 0xd5, 0xc6, 0x3d, 0x20, 0x0c, 0x39, 0xf5, 0x60, 0x38, 0x27, 0xd7, 0xdd, 0x02, 0xb5, 0x6f, 0x12, 0x0e, 0xe9, 0xf3, 0xa8, 0x67, 0x64, 0x24, 0x7c, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x01, 0x51, 0x80, 0x00, 0x57, 0x00, 0x2b, 0x0d, 0x02, 0x00, 0x01, 0x51, 0x80, 0x66, 0xad, 0x86, 0x26, 0x66, 0xa4, 0x3b, 0x3e, 0xe7, 0xda, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x4f, 0xcd, 0xf8, 0x7e, 0x5a, 0x69, 0xfc, 0x57, 0x44, 0xa9, 0x1f, 0x2b, 0xf1, 0xbc, 0xa4, 0xeb, 0x58, 0x7e, 0xe4, 0x13, 0xb8, 0xa7, 0x11, 0x79, 0x94, 0x5a, 0x09, 0x8f, 0x4d, 0xae, 0x11, 0x18, 0xec, 0x47, 0x17, 0xc2, 0xb6, 0x3a, 0xb6, 0x90, 0xed, 0x51, 0x13, 0x8e, 0xd5, 0xdb, 0x38, 0x42, 0xe1, 0x18, 0xeb, 0x78, 0xf5, 0x16, 0x36, 0x37, 0xfd, 0x20, 0xbf, 0xf9, 0x24, 0xf1, 0xb9, 0x4e, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ]))),
            "com.": (try Message(messageData: Data([ 0x99, 0x6b, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x30, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x01, 0x75, 0x00, 0x44, 0x01, 0x00, 0x03, 0x0d, 0x36, 0x9b, 0x39, 0x9f, 0x1b, 0x90, 0x1d, 0x16, 0xd8, 0xdd, 0xef, 0x61, 0x71, 0xb1, 0xf7, 0xea, 0x4c, 0x62, 0x10, 0xb2, 0x47, 0xe7, 0x08, 0xa5, 0xfb, 0xa7, 0x42, 0xe0, 0xad, 0x64, 0x79, 0x02, 0x3d, 0x72, 0x2d, 0x67, 0xab, 0x20, 0x8f, 0xe2, 0x4d, 0x57, 0xa1, 0x70, 0x41, 0x9f, 0x66, 0x9e, 0x48, 0xae, 0x0a, 0xc7, 0x03, 0xc4, 0xb3, 0x43, 0xa9, 0xa9, 0xcd, 0x1d, 0x89, 0xcb, 0xae, 0x8e, 0xc0, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x01, 0x75, 0x00, 0x44, 0x01, 0x01, 0x03, 0x0d, 0xb7, 0x1f, 0x04, 0x65, 0x10, 0x1d, 0xdb, 0xe2, 0xbf, 0x0c, 0x94, 0x55, 0xd1, 0x2f, 0xa1, 0x6c, 0x1c, 0xda, 0x44, 0xf4, 0xbf, 0x1b, 0xa2, 0x55, 0x34, 0x18, 0xad, 0x1f, 0x3a, 0xa9, 0xb0, 0x69, 0x73, 0xf2, 0x1b, 0x84, 0xeb, 0x53, 0x2c, 0xf4, 0x03, 0x5e, 0xe8, 0xd4, 0x83, 0x2c, 0xa2, 0x6d, 0x89, 0x30, 0x6a, 0x7d, 0x32, 0x56, 0x0c, 0x0c, 0xb0, 0x12, 0x9d, 0x45, 0x0a, 0xc1, 0x08, 0x35, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x01, 0x75, 0x00, 0x57, 0x00, 0x30, 0x0d, 0x01, 0x00, 0x01, 0x51, 0x80, 0x66, 0xb7, 0x72, 0xfb, 0x66, 0xa3, 0xab, 0x4f, 0x4d, 0x06, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0xfc, 0x34, 0x42, 0xce, 0xcb, 0x7f, 0xc9, 0x9b, 0xd4, 0x6e, 0xdf, 0x86, 0x6e, 0xd0, 0xf4, 0xe8, 0xad, 0x2d, 0x0c, 0x26, 0x1a, 0x7b, 0x2b, 0x3e, 0xe6, 0x2a, 0x54, 0x43, 0xb7, 0x97, 0x4a, 0xea, 0x9b, 0xe8, 0x6f, 0x30, 0x9e, 0xcc, 0x76, 0xb1, 0xe5, 0x5c, 0x88, 0x2e, 0x5e, 0x21, 0x17, 0x4d, 0xde, 0x90, 0xb6, 0xed, 0x85, 0xf9, 0x64, 0x9a, 0x80, 0x9c, 0xc7, 0x19, 0xc6, 0x9e, 0x2e, 0xaa, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ])), try Message(messageData: Data([ 0xca, 0x34, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x2b, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x01, 0x48, 0x75, 0x00, 0x24, 0x4d, 0x06, 0x0d, 0x02, 0x8a, 0xcb, 0xb0, 0xcd, 0x28, 0xf4, 0x12, 0x50, 0xa8, 0x0a, 0x49, 0x13, 0x89, 0x42, 0x4d, 0x34, 0x15, 0x22, 0xd9, 0x46, 0xb0, 0xda, 0x0c, 0x02, 0x91, 0xf2, 0xd3, 0xd7, 0x71, 0xd7, 0x80, 0x5a, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x01, 0x48, 0x75, 0x01, 0x13, 0x00, 0x2b, 0x08, 0x01, 0x00, 0x01, 0x51, 0x80, 0x66, 0xb6, 0x4b, 0x10, 0x66, 0xa5, 0x19, 0x80, 0x4e, 0x46, 0x00, 0x7d, 0x78, 0x40, 0x8c, 0x09, 0x2b, 0x18, 0xbb, 0xf5, 0x6c, 0x2f, 0xed, 0x50, 0xc9, 0x3f, 0x93, 0x68, 0x19, 0x09, 0x8e, 0x6f, 0xcf, 0x09, 0x64, 0x66, 0x2a, 0xe1, 0xd6, 0x99, 0x1e, 0x67, 0x86, 0x34, 0xa6, 0x02, 0x20, 0xcc, 0xdd, 0xc4, 0x04, 0x5d, 0xd9, 0x41, 0xd1, 0xf8, 0x7e, 0x7f, 0x3c, 0x85, 0x83, 0xc3, 0x27, 0x6f, 0x3d, 0xd7, 0xdb, 0x36, 0x51, 0x6b, 0x9e, 0x41, 0x91, 0x76, 0x34, 0x33, 0x6a, 0x5a, 0x77, 0xbc, 0x0a, 0xff, 0xc8, 0xfd, 0x03, 0x1a, 0xd8, 0xaa, 0x3a, 0x53, 0x81, 0x94, 0x84, 0x55, 0xcc, 0xc5, 0xac, 0x27, 0xb8, 0xd1, 0x11, 0x00, 0x50, 0xca, 0x15, 0x80, 0xc8, 0xfd, 0xba, 0x57, 0xa4, 0x48, 0xcd, 0xde, 0xf2, 0xbe, 0xf3, 0x0f, 0xd3, 0x4c, 0xf4, 0x78, 0xf7, 0xd1, 0x46, 0x5a, 0x7a, 0x2d, 0x5b, 0xa8, 0x48, 0x8f, 0xd3, 0xd2, 0xe3, 0xd0, 0x85, 0x7a, 0x11, 0xdd, 0xc4, 0x10, 0x7d, 0x76, 0xa2, 0xc9, 0x51, 0xd3, 0x90, 0xb8, 0x07, 0x45, 0x1e, 0x77, 0x22, 0xe5, 0x84, 0x5d, 0xe0, 0x4e, 0xca, 0x57, 0x82, 0xf2, 0xda, 0xb4, 0x8f, 0x81, 0xcb, 0x96, 0xf9, 0xce, 0x7b, 0x13, 0x85, 0xa8, 0x80, 0xb4, 0x90, 0x2f, 0x67, 0x96, 0x75, 0x6d, 0x70, 0x3e, 0xfd, 0xad, 0x51, 0x92, 0x9b, 0xb8, 0x30, 0x53, 0xa9, 0x7f, 0x18, 0x61, 0x7a, 0xd4, 0xf8, 0x38, 0x57, 0x73, 0x06, 0xf4, 0xd5, 0xb4, 0xa2, 0x5f, 0x30, 0x1f, 0x2f, 0x88, 0xc6, 0x03, 0x7c, 0xca, 0x70, 0x9f, 0x44, 0xbe, 0xdb, 0x99, 0x20, 0x3c, 0x5a, 0x1f, 0xba, 0x90, 0x59, 0x42, 0xe9, 0x22, 0x5e, 0x6d, 0x59, 0x57, 0xd0, 0xa4, 0x59, 0xe9, 0xc4, 0x8d, 0xb0, 0xbd, 0x0e, 0x53, 0x43, 0x8a, 0xb2, 0xf3, 0xcb, 0x8e, 0x5b, 0x22, 0xb5, 0xef, 0x9f, 0xf4, 0xca, 0x59, 0x11, 0x1d, 0xc9, 0xbe, 0x6e, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ]))),
            ".": (try Message(messageData: Data([ 0xfc, 0xb8, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x08, 0x01, 0x00, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0xd4, 0xa2, 0xcb, 0xab, 0x2c, 0x95, 0x8a, 0xdc, 0x65, 0x21, 0x9c, 0xb8, 0xc1, 0x0a, 0xe0, 0x3b, 0x44, 0xf0, 0x36, 0x59, 0x63, 0x50, 0x34, 0xf2, 0x40, 0x2c, 0xbe, 0x20, 0x03, 0xe3, 0xdb, 0x68, 0x71, 0x83, 0xb9, 0x9b, 0x7e, 0xc0, 0xbc, 0x83, 0xb2, 0xcd, 0xe8, 0x8a, 0x05, 0x6b, 0x8f, 0xb8, 0x9e, 0x26, 0xf6, 0xee, 0x47, 0xa2, 0x70, 0x8c, 0xfe, 0x7b, 0x71, 0x92, 0x56, 0x4a, 0x60, 0x5c, 0x8c, 0x7e, 0xdb, 0xfc, 0x5e, 0x84, 0x70, 0x6e, 0x25, 0xdd, 0xa5, 0x28, 0xdf, 0x76, 0x93, 0x47, 0x88, 0xc6, 0x13, 0x4d, 0x5d, 0xa8, 0x0d, 0x43, 0x4c, 0x8d, 0xd2, 0xc5, 0x9c, 0x5e, 0x87, 0x61, 0x26, 0x38, 0xf3, 0x1a, 0xcf, 0x6d, 0xeb, 0xd0, 0x39, 0x86, 0xc0, 0x14, 0x61, 0xe9, 0xc6, 0xa7, 0x17, 0x01, 0x04, 0xf4, 0xf8, 0x16, 0x81, 0x88, 0x0c, 0x77, 0x2e, 0xce, 0xa5, 0x5c, 0x14, 0x37, 0xfe, 0x14, 0x95, 0x3a, 0x9a, 0xef, 0x0d, 0x62, 0x42, 0x42, 0x22, 0x36, 0x39, 0x3f, 0xbd, 0xfa, 0xc6, 0x8a, 0x2d, 0xd7, 0x52, 0x21, 0x7e, 0x83, 0xc1, 0x35, 0x72, 0xd1, 0x2e, 0x53, 0xe1, 0x86, 0x38, 0x10, 0x68, 0x39, 0x47, 0x77, 0x3f, 0x78, 0xa5, 0x1b, 0xdb, 0xff, 0x17, 0x80, 0xa5, 0x94, 0xce, 0x53, 0x88, 0x66, 0xc5, 0x40, 0x65, 0x95, 0x12, 0x4c, 0xa5, 0xb4, 0xb5, 0x7e, 0x78, 0x71, 0xc0, 0x00, 0x2c, 0xee, 0xc6, 0xae, 0xfb, 0x31, 0xfc, 0xd5, 0xba, 0xda, 0x37, 0x35, 0xc6, 0xfe, 0xb0, 0x58, 0x05, 0xe8, 0x70, 0xe1, 0x15, 0x80, 0x1e, 0xfe, 0xe0, 0xbc, 0xdb, 0xee, 0xaf, 0x69, 0xe6, 0x8d, 0xf4, 0xfa, 0xc6, 0x28, 0x1a, 0x93, 0xac, 0x2a, 0x01, 0x6f, 0x31, 0x2c, 0xb8, 0xa0, 0x26, 0x53, 0x40, 0xc4, 0x31, 0xd9, 0x28, 0xdd, 0xfc, 0xd1, 0xb6, 0x6c, 0xc3, 0x30, 0xea, 0x73, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x08, 0x01, 0x01, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0xac, 0xff, 0xb4, 0x09, 0xbc, 0xc9, 0x39, 0xf8, 0x31, 0xf7, 0xa1, 0xe5, 0xec, 0x88, 0xf7, 0xa5, 0x92, 0x55, 0xec, 0x53, 0x04, 0x0b, 0xe4, 0x32, 0x02, 0x73, 0x90, 0xa4, 0xce, 0x89, 0x6d, 0x6f, 0x90, 0x86, 0xf3, 0xc5, 0xe1, 0x77, 0xfb, 0xfe, 0x11, 0x81, 0x63, 0xaa, 0xec, 0x7a, 0xf1, 0x46, 0x2c, 0x47, 0x94, 0x59, 0x44, 0xc4, 0xe2, 0xc0, 0x26, 0xbe, 0x5e, 0x98, 0xbb, 0xcd, 0xed, 0x25, 0x97, 0x82, 0x72, 0xe1, 0xe3, 0xe0, 0x79, 0xc5, 0x09, 0x4d, 0x57, 0x3f, 0x0e, 0x83, 0xc9, 0x2f, 0x02, 0xb3, 0x2d, 0x35, 0x13, 0xb1, 0x55, 0x0b, 0x82, 0x69, 0x29, 0xc8, 0x0d, 0xd0, 0xf9, 0x2c, 0xac, 0x96, 0x6d, 0x17, 0x76, 0x9f, 0xd5, 0x86, 0x7b, 0x64, 0x7c, 0x3f, 0x38, 0x02, 0x9a, 0xbd, 0xc4, 0x81, 0x52, 0xeb, 0x8f, 0x20, 0x71, 0x59, 0xec, 0xc5, 0xd2, 0x32, 0xc7, 0xc1, 0x53, 0x7c, 0x79, 0xf4, 0xb7, 0xac, 0x28, 0xff, 0x11, 0x68, 0x2f, 0x21, 0x68, 0x1b, 0xf6, 0xd6, 0xab, 0xa5, 0x55, 0x03, 0x2b, 0xf6, 0xf9, 0xf0, 0x36, 0xbe, 0xb2, 0xaa, 0xa5, 0xb3, 0x77, 0x8d, 0x6e, 0xeb, 0xfb, 0xa6, 0xbf, 0x9e, 0xa1, 0x91, 0xbe, 0x4a, 0xb0, 0xca, 0xea, 0x75, 0x9e, 0x2f, 0x77, 0x3a, 0x1f, 0x90, 0x29, 0xc7, 0x3e, 0xcb, 0x8d, 0x57, 0x35, 0xb9, 0x32, 0x1d, 0xb0, 0x85, 0xf1, 0xb8, 0xe2, 0xd8, 0x03, 0x8f, 0xe2, 0x94, 0x19, 0x92, 0x54, 0x8c, 0xee, 0x0d, 0x67, 0xdd, 0x45, 0x47, 0xe1, 0x1d, 0xd6, 0x3a, 0xf9, 0xc9, 0xfc, 0x1c, 0x54, 0x66, 0xfb, 0x68, 0x4c, 0xf0, 0x09, 0xd7, 0x19, 0x7c, 0x2c, 0xf7, 0x9e, 0x79, 0x2a, 0xb5, 0x01, 0xe6, 0xa8, 0xa1, 0xca, 0x51, 0x9a, 0xf2, 0xcb, 0x9b, 0x5f, 0x63, 0x67, 0xe9, 0x4c, 0x0d, 0x47, 0x50, 0x24, 0x51, 0x35, 0x7b, 0xe1, 0xb5, 0x00, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x13, 0x00, 0x30, 0x08, 0x00, 0x00, 0x02, 0xa3, 0x00, 0x66, 0xb7, 0xff, 0x00, 0x66, 0x9c, 0x4f, 0x80, 0x4f, 0x66, 0x00, 0xa0, 0x7b, 0x07, 0x2e, 0xf3, 0x4c, 0x0b, 0xa6, 0xf5, 0xb5, 0x8f, 0x8e, 0x17, 0xb0, 0x46, 0xf5, 0xeb, 0x59, 0x6d, 0x93, 0x22, 0xc5, 0x14, 0x22, 0x04, 0x3e, 0xa0, 0xce, 0x9c, 0xdd, 0x0f, 0x7d, 0xa6, 0xe2, 0x5d, 0x15, 0x76, 0x1e, 0xb2, 0x3b, 0x4b, 0xc0, 0xe8, 0x40, 0x90, 0xdc, 0xf3, 0x07, 0x8a, 0x1a, 0x65, 0xbd, 0x91, 0xa5, 0x62, 0x06, 0x5c, 0x6a, 0x8c, 0x39, 0x58, 0x55, 0xa8, 0x77, 0xb1, 0x46, 0x02, 0xe7, 0xd2, 0x9d, 0xc1, 0xab, 0xad, 0x7f, 0xb9, 0xe6, 0xc5, 0xca, 0x9f, 0x82, 0x3f, 0x71, 0x98, 0x41, 0x7c, 0xf6, 0x21, 0xdd, 0x60, 0x82, 0x23, 0xe1, 0xfb, 0x52, 0x0d, 0xbd, 0xb5, 0x5f, 0x35, 0x56, 0x47, 0x87, 0x48, 0x98, 0x15, 0x77, 0x7a, 0xb9, 0x2d, 0xf5, 0x15, 0x62, 0x4b, 0xa7, 0x0b, 0x3a, 0x32, 0xb2, 0x2d, 0x35, 0x89, 0x4e, 0x3c, 0x29, 0xe7, 0xe6, 0x29, 0x90, 0x06, 0xab, 0x33, 0xc8, 0x36, 0x43, 0xb0, 0x44, 0x94, 0xfb, 0xeb, 0xe9, 0x72, 0xac, 0xec, 0xd2, 0x55, 0x05, 0xaf, 0x61, 0x2b, 0x56, 0xb1, 0x1e, 0x44, 0x19, 0x2b, 0xcf, 0x43, 0x5f, 0xed, 0x25, 0x05, 0xce, 0x23, 0x36, 0x84, 0xce, 0xe0, 0xc3, 0x16, 0x9e, 0x74, 0xd9, 0xf0, 0x89, 0xa9, 0x7f, 0x42, 0x2b, 0xd2, 0xdc, 0x8c, 0x27, 0xa5, 0x79, 0x7a, 0x5e, 0x0d, 0xf7, 0x47, 0xfb, 0xb2, 0xa4, 0xd5, 0x3a, 0x91, 0x32, 0xb4, 0x47, 0xb7, 0x77, 0xa1, 0x46, 0xca, 0xa1, 0xe3, 0x2b, 0x91, 0xe5, 0xbb, 0xaa, 0xfa, 0x9f, 0xa5, 0x0a, 0xc1, 0xe1, 0xb7, 0x6f, 0x2f, 0x76, 0x08, 0xc0, 0x0c, 0x17, 0xa1, 0xae, 0xa9, 0x9b, 0x86, 0xfe, 0x8c, 0x1a, 0x80, 0x44, 0xdd, 0x02, 0xbe, 0xad, 0x6e, 0x71, 0xb8, 0x7a, 0xa5, 0xbb, 0x78, 0xd1, 0x57, 0x5e, 0x49, 0x05, 0x8d, 0xff, 0x36, 0x70, 0xd2, 0xc9, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 ])), nil),
        ]
        let result = try DNSSECClient.authenticateMessage(message, withResources: &resources)
        #expect(result.signatureError == nil, "Signature error must be nil")
        #expect(result.chainError == nil, "Chain error must be nil")
    }

    @Test func testValidateMultipleDSRecords() async throws {
        let fmDSReplyMessage = try Message(messageData: Data([0x89, 0xf0, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x02, 0x66, 0x6d, 0x00, 0x00, 0x2b, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x01, 0x2c, 0x98, 0x00, 0x24, 0x66, 0x4a, 0x08, 0x02, 0xdb, 0x37, 0x03, 0x69, 0x73, 0x84, 0xa6, 0xf8, 0xb3, 0xa9, 0x44, 0xa2, 0x1c, 0x1a, 0x81, 0xff, 0xd9, 0x21, 0x00, 0x0b, 0x23, 0xaa, 0x42, 0x41, 0x38, 0x0b, 0x4b, 0xa3, 0xaa, 0x28, 0xde, 0xa0, 0xc0, 0x0c, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x01, 0x2c, 0x98, 0x00, 0x24, 0xeb, 0x42, 0x08, 0x02, 0xff, 0x41, 0x91, 0xe3, 0x2b, 0x7f, 0x63, 0x6a, 0xab, 0xaf, 0x95, 0x7b, 0xf9, 0x76, 0xbc, 0x1d, 0x79, 0x2b, 0x57, 0x09, 0xb7, 0x3a, 0x35, 0x1f, 0xc7, 0x7f, 0x45, 0xd0, 0x03, 0x3d, 0xfb, 0xde, 0xc0, 0x0c, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x01, 0x2c, 0x98, 0x01, 0x13, 0x00, 0x2b, 0x08, 0x01, 0x00, 0x01, 0x51, 0x80, 0x67, 0xcf, 0x1a, 0x90, 0x67, 0xbd, 0xe9, 0x00, 0x67, 0x66, 0x00, 0x4a, 0xc7, 0x4e, 0xc9, 0xeb, 0x83, 0x8e, 0xe7, 0x83, 0xc6, 0xe9, 0xa9, 0xf0, 0xc6, 0xd3, 0x1d, 0x77, 0xa5, 0x9b, 0x4c, 0x45, 0x0a, 0xad, 0x4c, 0x18, 0xf3, 0xf5, 0x6b, 0x08, 0x9d, 0x31, 0x90, 0x4f, 0x52, 0x85, 0xa2, 0xb1, 0x09, 0xfc, 0xe7, 0x29, 0xf3, 0x59, 0x6b, 0x19, 0x6b, 0xb0, 0x24, 0xa9, 0x45, 0x4b, 0x46, 0x88, 0x5d, 0x11, 0x87, 0x9c, 0x92, 0x8e, 0x69, 0x58, 0x96, 0x81, 0xc4, 0xe4, 0xf2, 0xdb, 0x6c, 0x31, 0xa3, 0x1e, 0x46, 0x3d, 0x67, 0xcd, 0x61, 0x1f, 0x67, 0xf7, 0x91, 0xd7, 0x6e, 0x07, 0x75, 0x67, 0x9e, 0x0b, 0x6e, 0xd6, 0x47, 0x52, 0xfb, 0xaa, 0x6b, 0xb0, 0xe2, 0x04, 0x67, 0xfb, 0xd4, 0x4b, 0x1a, 0x6f, 0xc9, 0x42, 0x1d, 0x4a, 0x2c, 0x8d, 0xe8, 0x92, 0x52, 0x2f, 0x0a, 0x0b, 0x83, 0x0d, 0x64, 0x4d, 0x1d, 0x08, 0x9c, 0xb2, 0x5e, 0xa8, 0xc8, 0x81, 0x14, 0x25, 0x16, 0x6b, 0x16, 0x0c, 0x3e, 0x51, 0xbe, 0x18, 0x07, 0x7d, 0xa6, 0x7c, 0xbd, 0x02, 0x8b, 0x6b, 0x81, 0x14, 0x15, 0x13, 0x6b, 0xfc, 0x56, 0x41, 0x49, 0x3d, 0x11, 0xb2, 0x63, 0x5b, 0xcd, 0xfa, 0xb4, 0x69, 0xf9, 0x06, 0x79, 0x90, 0x3d, 0xd1, 0x6b, 0x25, 0x81, 0x69, 0xef, 0x0d, 0x96, 0x36, 0x78, 0x54, 0x3f, 0xf7, 0xdc, 0x35, 0xdd, 0xd1, 0x70, 0x2e, 0x39, 0x31, 0x7b, 0x22, 0xe3, 0x76, 0x04, 0x9a, 0x90, 0x10, 0x9d, 0x68, 0x76, 0x56, 0xea, 0x9c, 0x29, 0x18, 0x02, 0x9e, 0x06, 0x5a, 0xb5, 0x9b, 0xef, 0x7b, 0xbf, 0x7f, 0xb9, 0x65, 0x46, 0x93, 0x3e, 0xb9, 0xf5, 0x5a, 0xed, 0xc1, 0x9a, 0x5a, 0x1c, 0x9a, 0x28, 0xfc, 0x9b, 0xee, 0x3c, 0x1a, 0x82, 0x19, 0x8e, 0xbe, 0x71, 0x89, 0x7b, 0xd2, 0x9c, 0xc3, 0x3b, 0x26, 0x46, 0x25, 0x13, 0x21, 0x6d, 0x75, 0xe4, 0x9f, 0xa7, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00]))
        let rootDNSKEYReplyMessage = try Message(messageData: Data([0x3f, 0xd0, 0x81, 0xa0, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x0b, 0xa4, 0x01, 0x08, 0x01, 0x00, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0x9e, 0x40, 0xee, 0x33, 0xb3, 0xb5, 0xfe, 0xb6, 0x70, 0x6a, 0xa1, 0x3e, 0x1b, 0xad, 0x8e, 0x7c, 0xa5, 0xec, 0xa0, 0x63, 0x22, 0xc8, 0xdb, 0xc9, 0x36, 0xfc, 0x8a, 0x5f, 0x85, 0xb2, 0x06, 0xcc, 0x51, 0xb3, 0xb6, 0x35, 0x01, 0xda, 0x49, 0xb6, 0xad, 0x1d, 0xd9, 0x4e, 0x96, 0xa0, 0x0d, 0x9d, 0xc0, 0xf0, 0x48, 0x82, 0x99, 0xf6, 0xbc, 0xaa, 0x77, 0x5f, 0x83, 0xcb, 0x53, 0xe8, 0x1b, 0x37, 0x93, 0x52, 0xff, 0x79, 0xbc, 0xe2, 0x67, 0x55, 0x52, 0x47, 0x94, 0x9b, 0xbb, 0xc5, 0xd6, 0xaf, 0x9d, 0x49, 0x8f, 0xb3, 0xe3, 0x21, 0xd8, 0xd5, 0x7b, 0x84, 0x39, 0x53, 0x4f, 0x03, 0xe7, 0xe6, 0xe5, 0xe0, 0x17, 0x10, 0x1a, 0xc6, 0x83, 0xbd, 0x33, 0xf6, 0x08, 0x00, 0x2f, 0x76, 0x1a, 0xbc, 0x82, 0x2e, 0x3a, 0x09, 0x12, 0x0f, 0x49, 0xcd, 0xe7, 0xaf, 0x92, 0x4b, 0x44, 0x33, 0xfb, 0x05, 0xa6, 0x64, 0x6f, 0xe0, 0x8e, 0x63, 0x42, 0xd9, 0x4b, 0xc9, 0x1a, 0x95, 0x6e, 0x70, 0xb3, 0x71, 0x6a, 0x62, 0xd3, 0x85, 0xda, 0x54, 0xbc, 0x51, 0x2a, 0xf5, 0x11, 0x91, 0xdf, 0xcc, 0x75, 0xbf, 0xf6, 0x45, 0x04, 0xb7, 0x31, 0x8b, 0xeb, 0x90, 0x40, 0x57, 0xba, 0xab, 0x67, 0x01, 0x50, 0x42, 0x7f, 0xa1, 0x71, 0xe2, 0xc8, 0x01, 0x60, 0xe7, 0xd8, 0xbd, 0xb5, 0x2e, 0x1b, 0x67, 0x62, 0x2e, 0x71, 0x89, 0x5b, 0xf3, 0x17, 0xbc, 0x5a, 0x5c, 0xb5, 0x98, 0x10, 0xef, 0xaf, 0xb7, 0x17, 0x03, 0x2a, 0x01, 0x97, 0xd1, 0xf6, 0x4e, 0x5b, 0xa2, 0x12, 0xfb, 0x00, 0x5d, 0xfe, 0x8e, 0xac, 0xf8, 0x31, 0x48, 0xa8, 0xa2, 0xd6, 0x28, 0x87, 0x99, 0x28, 0xca, 0xde, 0xd5, 0x12, 0x75, 0x14, 0x2f, 0x1c, 0x72, 0xe9, 0x4e, 0x4f, 0x20, 0xd4, 0xc6, 0x80, 0xe0, 0xb6, 0xe9, 0xfd, 0xf3, 0x66, 0xe9, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x0b, 0xa4, 0x01, 0x08, 0x01, 0x01, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0xac, 0xff, 0xb4, 0x09, 0xbc, 0xc9, 0x39, 0xf8, 0x31, 0xf7, 0xa1, 0xe5, 0xec, 0x88, 0xf7, 0xa5, 0x92, 0x55, 0xec, 0x53, 0x04, 0x0b, 0xe4, 0x32, 0x02, 0x73, 0x90, 0xa4, 0xce, 0x89, 0x6d, 0x6f, 0x90, 0x86, 0xf3, 0xc5, 0xe1, 0x77, 0xfb, 0xfe, 0x11, 0x81, 0x63, 0xaa, 0xec, 0x7a, 0xf1, 0x46, 0x2c, 0x47, 0x94, 0x59, 0x44, 0xc4, 0xe2, 0xc0, 0x26, 0xbe, 0x5e, 0x98, 0xbb, 0xcd, 0xed, 0x25, 0x97, 0x82, 0x72, 0xe1, 0xe3, 0xe0, 0x79, 0xc5, 0x09, 0x4d, 0x57, 0x3f, 0x0e, 0x83, 0xc9, 0x2f, 0x02, 0xb3, 0x2d, 0x35, 0x13, 0xb1, 0x55, 0x0b, 0x82, 0x69, 0x29, 0xc8, 0x0d, 0xd0, 0xf9, 0x2c, 0xac, 0x96, 0x6d, 0x17, 0x76, 0x9f, 0xd5, 0x86, 0x7b, 0x64, 0x7c, 0x3f, 0x38, 0x02, 0x9a, 0xbd, 0xc4, 0x81, 0x52, 0xeb, 0x8f, 0x20, 0x71, 0x59, 0xec, 0xc5, 0xd2, 0x32, 0xc7, 0xc1, 0x53, 0x7c, 0x79, 0xf4, 0xb7, 0xac, 0x28, 0xff, 0x11, 0x68, 0x2f, 0x21, 0x68, 0x1b, 0xf6, 0xd6, 0xab, 0xa5, 0x55, 0x03, 0x2b, 0xf6, 0xf9, 0xf0, 0x36, 0xbe, 0xb2, 0xaa, 0xa5, 0xb3, 0x77, 0x8d, 0x6e, 0xeb, 0xfb, 0xa6, 0xbf, 0x9e, 0xa1, 0x91, 0xbe, 0x4a, 0xb0, 0xca, 0xea, 0x75, 0x9e, 0x2f, 0x77, 0x3a, 0x1f, 0x90, 0x29, 0xc7, 0x3e, 0xcb, 0x8d, 0x57, 0x35, 0xb9, 0x32, 0x1d, 0xb0, 0x85, 0xf1, 0xb8, 0xe2, 0xd8, 0x03, 0x8f, 0xe2, 0x94, 0x19, 0x92, 0x54, 0x8c, 0xee, 0x0d, 0x67, 0xdd, 0x45, 0x47, 0xe1, 0x1d, 0xd6, 0x3a, 0xf9, 0xc9, 0xfc, 0x1c, 0x54, 0x66, 0xfb, 0x68, 0x4c, 0xf0, 0x09, 0xd7, 0x19, 0x7c, 0x2c, 0xf7, 0x9e, 0x79, 0x2a, 0xb5, 0x01, 0xe6, 0xa8, 0xa1, 0xca, 0x51, 0x9a, 0xf2, 0xcb, 0x9b, 0x5f, 0x63, 0x67, 0xe9, 0x4c, 0x0d, 0x47, 0x50, 0x24, 0x51, 0x35, 0x7b, 0xe1, 0xb5, 0x00, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x0b, 0xa4, 0x01, 0x08, 0x01, 0x01, 0x03, 0x08, 0x03, 0x01, 0x00, 0x01, 0xaf, 0x7a, 0x8d, 0xeb, 0xa4, 0x9d, 0x99, 0x5a, 0x79, 0x2a, 0xef, 0xc8, 0x02, 0x63, 0xe9, 0x91, 0xef, 0xdb, 0xc8, 0x61, 0x38, 0xa9, 0x31, 0xde, 0xb2, 0xc6, 0x5d, 0x56, 0x82, 0xea, 0xb5, 0xd3, 0xb0, 0x37, 0x38, 0xe3, 0xdf, 0xdc, 0x89, 0xd9, 0x6d, 0xa6, 0x4c, 0x86, 0xc0, 0x22, 0x4d, 0x9c, 0xe0, 0x25, 0x14, 0xd2, 0x85, 0xda, 0x30, 0x68, 0xb1, 0x90, 0x54, 0xe5, 0xe7, 0x87, 0xb2, 0x96, 0x90, 0x58, 0xe9, 0x8e, 0x12, 0x56, 0x6c, 0x8c, 0x80, 0x8c, 0x40, 0xc0, 0xb7, 0x69, 0xe1, 0xdb, 0x1a, 0x24, 0xa1, 0xbd, 0x9b, 0x31, 0xe3, 0x03, 0x18, 0x4a, 0x31, 0xfc, 0x7b, 0xb5, 0x6b, 0x85, 0xbb, 0xba, 0x8a, 0xbc, 0x02, 0xcd, 0x50, 0x40, 0xa4, 0x44, 0xa3, 0x6d, 0x47, 0x69, 0x59, 0x69, 0x84, 0x9e, 0x16, 0xad, 0x85, 0x6b, 0xb5, 0x8e, 0x8f, 0xac, 0x88, 0x55, 0x22, 0x44, 0x00, 0x31, 0x9b, 0xda, 0xb2, 0x24, 0xd8, 0x3f, 0xc0, 0xe6, 0x6a, 0xab, 0x32, 0xff, 0x74, 0xbf, 0xea, 0xf0, 0xf9, 0x1c, 0x45, 0x4e, 0x68, 0x50, 0xa1, 0x29, 0x52, 0x07, 0xbb, 0xd4, 0xcd, 0xde, 0x8f, 0x6f, 0xfb, 0x08, 0xfa, 0xa9, 0x75, 0x5c, 0x2e, 0x32, 0x84, 0xef, 0xa0, 0x1f, 0x99, 0x39, 0x3e, 0x18, 0x78, 0x6c, 0xb1, 0x32, 0xf1, 0xe6, 0x6e, 0xbc, 0x65, 0x17, 0x31, 0x8e, 0x1c, 0xe8, 0xa3, 0xb7, 0x33, 0x7e, 0xbb, 0x54, 0xd0, 0x35, 0xab, 0x57, 0xd9, 0x70, 0x6e, 0xcd, 0x93, 0x50, 0xd4, 0xaf, 0xac, 0xd8, 0x25, 0xe4, 0x3c, 0x86, 0x68, 0xee, 0xce, 0x89, 0x81, 0x9c, 0xaf, 0x68, 0x17, 0xaf, 0x62, 0xdc, 0x4f, 0xbd, 0x82, 0xf0, 0xe3, 0x3f, 0x66, 0x47, 0xb2, 0xb6, 0xbd, 0xa1, 0x75, 0xf1, 0x46, 0x07, 0xf5, 0x9f, 0x46, 0x35, 0x45, 0x1e, 0x6b, 0x27, 0xdf, 0x28, 0x2e, 0xf7, 0x3d, 0x87, 0x00, 0x00, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x0b, 0xa4, 0x01, 0x13, 0x00, 0x30, 0x08, 0x00, 0x00, 0x02, 0xa3, 0x00, 0x67, 0xd2, 0x20, 0x00, 0x67, 0xb6, 0x70, 0x80, 0x4f, 0x66, 0x00, 0x14, 0xcc, 0x91, 0xca, 0x6b, 0x27, 0x3e, 0x1a, 0xa8, 0xaf, 0xac, 0xd8, 0xdd, 0xb2, 0x7f, 0x1d, 0x20, 0x53, 0x51, 0x64, 0xca, 0xd7, 0x9d, 0xcf, 0x56, 0x16, 0xa2, 0xb6, 0xe7, 0x79, 0xfb, 0x4a, 0x37, 0xbc, 0x47, 0x11, 0xdc, 0x1f, 0x0e, 0x77, 0xdd, 0xf9, 0x0c, 0x58, 0xf6, 0x93, 0xf7, 0x4a, 0xd4, 0xed, 0xcb, 0x23, 0xce, 0x38, 0xe0, 0x23, 0x3d, 0xc2, 0x5a, 0xb6, 0x1a, 0x4d, 0xfc, 0x99, 0xa3, 0x56, 0xae, 0xf4, 0xce, 0x51, 0x2e, 0xda, 0xeb, 0x5e, 0x79, 0x05, 0x50, 0x91, 0xdb, 0x3e, 0x9d, 0x9a, 0x4a, 0x10, 0xd5, 0x93, 0x98, 0x27, 0x60, 0x6d, 0xab, 0x3f, 0x18, 0xd5, 0xbe, 0x27, 0x22, 0xb9, 0x05, 0x1c, 0x89, 0x66, 0xa8, 0x79, 0xe7, 0xe9, 0xbb, 0x3a, 0xc6, 0x6c, 0xa1, 0x56, 0x8e, 0xf3, 0x66, 0xe6, 0x3a, 0x52, 0x9d, 0xc9, 0x48, 0xd7, 0xf3, 0xc4, 0x79, 0x3f, 0x28, 0x5f, 0x3a, 0xb9, 0x82, 0xd5, 0xa2, 0xb3, 0x0e, 0x2c, 0xb1, 0x35, 0x6c, 0xd5, 0x54, 0x4e, 0x28, 0xb3, 0x85, 0xdc, 0x03, 0x2c, 0xf4, 0x49, 0x22, 0xf4, 0x2f, 0xc2, 0x5e, 0x65, 0x28, 0xec, 0x9d, 0x3d, 0x2e, 0x9c, 0x6d, 0xba, 0xb2, 0x0b, 0x33, 0xcb, 0xca, 0x30, 0x10, 0x8d, 0xe5, 0x78, 0xf1, 0x11, 0x7b, 0x0c, 0x0c, 0x76, 0xc5, 0x41, 0x70, 0x6e, 0x08, 0xcb, 0x20, 0xb4, 0x5a, 0x1e, 0x34, 0xa5, 0x70, 0x7f, 0x5a, 0x31, 0xd1, 0xbb, 0xab, 0x46, 0x12, 0xa4, 0xcf, 0x50, 0x0b, 0x1d, 0xf7, 0xe5, 0xca, 0x54, 0x92, 0x37, 0x3c, 0xeb, 0x0b, 0xa9, 0x12, 0x64, 0xb7, 0x42, 0xb4, 0x3f, 0x60, 0x1d, 0x16, 0x5b, 0x76, 0x97, 0x61, 0x4b, 0x6a, 0xae, 0xf6, 0xed, 0xac, 0xc4, 0x69, 0x04, 0xb6, 0xf1, 0x8a, 0xb8, 0x8c, 0xc2, 0x2f, 0x5e, 0xad, 0xf4, 0xec, 0x2e, 0x44, 0xc0, 0x28, 0x38, 0x1c, 0x20, 0x00, 0x00, 0x29, 0x04, 0xd0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00]))

        var rrset: [Answer] = []
        var rrsig: Answer?
        for answer in fmDSReplyMessage.answers {
            if answer.recordType == .RRSIG {
                rrsig = answer
            } else {
                rrset.append(answer)
            }
        }
        guard let rrsig = rrsig else {
            fatalError()
        }

        var dnskey: Answer?
        for answer in rootDNSKEYReplyMessage.answers {
            if answer.recordType == .DNSKEY {
                guard let data = answer.data as? DNSKEYRecordData else {
                    fatalError()
                }
                if data.keyTag == (rrsig.data as! RRSIGRecordData).keyTag {
                    dnskey = answer
                }
            }
        }
        guard let dnskey = dnskey else {
            fatalError()
        }

        try DNSSECSignatureVerifier.verifyAnswers(rrset, signatureAnswer: rrsig, dnskeyAnswer: dnskey)
    }
}
