"""
DNSKit
Copyright (C) 2024 Ian Spence

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
from datetime import datetime
import http.client
import re
import os

def get_gtld_list():
    connection = http.client.HTTPSConnection("raw.githubusercontent.com")
    connection.request("GET", "/rfc1036/whois/next/new_gtlds_list")
    response = connection.getresponse()
    
    tlds = []
    for line in response.read().decode().splitlines():
        if line == "":
            continue
        if line[0] == "#":
            continue

        tlds.append(line)

    return tlds


def get_tld_servers():
    connection = http.client.HTTPSConnection("raw.githubusercontent.com")
    connection.request("GET", "/rfc1036/whois/next/tld_serv_list")
    response = connection.getresponse()

    servers = {}

    # Remove all comments
    data = re.sub(r'#.*$', '', response.read().decode(), flags=re.MULTILINE)
    # Remove multiple spaces
    data = re.sub(r'^\s+', '', data, flags=re.MULTILINE)
    # Remove trailing spaces
    data = re.sub(r'\s+$', '', data, flags=re.MULTILINE)
    # Conver all spaces to tabs
    data = re.sub(r' ', '\t', data, flags=re.MULTILINE)
    # Reduce duplicate tabs
    data = re.sub(r'\t+', '\t', data, flags=re.MULTILINE)

    for line in data.splitlines():
        parts = line.split('\t')
        if len(parts) < 2:
            continue

        tld = parts[0]
        server = ""

        if parts[1] == "NONE":
            continue
        elif parts[1] == "WEB":
            continue
        elif parts[1] == "VERISIGN":
            server = parts[2]
        else:
            server = parts[1]

        if server == "":
            print("Bad line format {}".format(line))
            raise "bad line format"

        servers[tld] = server

    return servers

gtld_list = get_gtld_list()
tld_servers = get_tld_servers()

file = ""
with open("../../../.github/license-header.txt", "r") as file:
    license_header_template = file.read().rstrip()
    license_header_template = license_header_template.replace("##YEAR##", datetime.now().strftime("%Y"))
    lines = license_header_template.split("\n")
    i = 0
    while i < len(lines):
        lines[i] = "// " + lines[i]
        i = i + 1
    file = "\n".join(lines)

file = file + """

// swiftlint:disable all
import Foundation

// DO NOT EDIT THIS FILE
// This file is dynamically generated using the update_whois.py script
// The information in this file is sourced from github.com/rfc1036/whois
//
// Thank you to Marco d'Itri <md@linux.it> for maintaining this list!

internal extension WHOISClient {
    static func getNewGtlds() -> [String] {
        return [
"""

for gtld in get_gtld_list():
    file = file + "            \"%s\",\n" % (gtld)

file = file + """        ]
    }

    static func getTldServ() -> [String: String] {
        return [
"""

for tld, server in get_tld_servers().items():
    file = file + "            \"%s\": \"%s\",\n" % (tld, server)

file = file + """        ]
    }
}

// swiftlint:enable all
"""

try:
    os.remove("WHOISServers.swift.tmp")
except Exception as e:
    pass

with open("WHOISServers.swift.tmp", 'w') as w:
    w.write(file)

try:
    os.remove("WHOISServers.swift")
except Exception as e:
    pass

os.rename("WHOISServers.swift.tmp", "WHOISServers.swift")
print("Generated %s" % "WHOISServers.swift")
